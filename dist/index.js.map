{"version":3,"file":"index.js","sources":["../src/Maybe.js","../src/curry.js","../src/append.js","../src/compose.js","../src/concat.js","../src/drop.js","../src/every.js","../src/filter.js","../src/find.js","../src/findIndex.js","../src/has.js","../src/includes.js","../src/indexOf.js","../src/join.js","../src/map.js","../src/match.js","../src/merge.js","../src/nth.js","../src/pluck.js","../src/prop.js","../src/props.js","../src/range.js","../src/reduce.js","../src/reduceRight.js","../src/replace.js","../src/slice.js","../src/some.js","../src/sortBy.js","../src/split.js","../src/take.js","../src/test.js","../src/toMaybe.js","../src/fromMaybe.js","../src/index.js","../src/head.js","../src/init.js","../src/keys.js","../src/last.js","../src/length.js","../src/mergeAll.js","../src/reverse.js","../src/sort.js","../src/sum.js","../src/tail.js","../src/toLowerCase.js","../src/toUpperCase.js","../src/trim.js","../src/values.js"],"sourcesContent":["function Nothing() {\n    return {\n        chain: f => Nothing(),\n        map: f => Nothing(),\n        ap: f => Nothing(),\n        concat: m => m,\n        empty: () => Nothing(),\n        isNothing: true,\n        isJust: false,\n        of: x => Just(x),\n        toString: () => 'Nothing()',\n        equals: m => m.isNothing === true\n    }\n}\n\nfunction Just(x) {\n    return {\n        chain: f => f(x),\n        map: f => Just(f(x)),\n        ap: m => m.map(x),\n        concat: m => m.isNothing === true ? Just(x) : Just(x.concat(m.value)),\n        empty: () => Nothing(),\n        isNothing: false,\n        isJust: true,\n        of: x => Just(x),\n        value: x,\n        toString: () => 'Just(' + x + ')',\n        equals: m => m.isJust === true && m.value === x\n    }\n}\n\nmodule.exports = {\n    Nothing: Nothing,\n    Just: Just\n}\n","'use strict'\n\nmodule.exports = (f) => function () {\n  let args = []\n  const curried = function () {\n    args = args.concat(Array.prototype.slice.call(arguments))\n    return (args.length >= f.length) ? f.apply(null, args) : curried\n  }\n  return curried.apply(null, arguments)\n}","const curry = require('./curry')\n\nmodule.exports = curry((x, xs) => xs.concat([x]))\n","'use strict'\nconst slice = Array.prototype.slice;\n\nmodule.exports = function () {\n  const fs = slice.call(arguments).reverse()\n  return function () {\n    const args = slice.call(arguments)\n    return fs.slice(1)\n      .reduce((arg, f) => f(arg), fs[0].apply(null, args))\n  }\n}","const curry = require('./curry')\n\nmodule.exports = curry((xs, xss) => xs.concat(xss))\n","const curry = require('./curry')\n\nmodule.exports = curry((i, xs) => xs.slice(i))","const curry = require('./curry')\n\nmodule.exports = curry((pred, xs) => xs.every(pred))\n","const curry = require('./curry')\n\nmodule.exports = curry((pred, xs) => xs.filter(pred))\n","const Nothing = require('./Maybe').Nothing\nconst Just = require('./Maybe').Just\nconst curry = require('./curry')\n\nmodule.exports = curry((pred, xs) => {\n    const found = xs.find(pred)\n    return found == null ? Nothing() : Just(found)\n})\n","const curry = require('./curry')\nconst Nothing = require('./Maybe').Nothing\nconst Just = require('./Maybe').Just\n\nmodule.exports = curry((pred, xs) => {\n    const index = xs.findIndex(pred)\n    return index === -1 ? Nothing() : Just(index)\n})\n","const curry = require('./curry')\n\nmodule.exports = curry((prop, o) => Object.prototype.hasOwnProperty.call(o, prop))","const curry = require('./curry')\n\nmodule.exports = curry((e, xs) => xs.indexOf(e) !== -1)\n","const curry = require('./curry')\nconst Nothing = require('./Maybe').Nothing\nconst Just = require('./Maybe').Just\n\nmodule.exports = curry((x, xs) => {\n    const index = xs.indexOf(x)\n    return index === -1 ? Nothing() : Just(index)\n})\n","const curry = require('./curry')\n\nmodule.exports = curry((delimiter, xs) => xs.join(delimiter))\n","const curry = require('./curry')\n\nmodule.exports = curry((f, xs) => xs.map(x => f(x)))\n","const curry = require('./curry')\n\nmodule.exports = curry((regex, str) => str.match(regex))\n","const curry = require('./curry')\n\nmodule.exports = curry((o, o1) => Object.assign({}, o, o1))","const curry = require('./curry')\nconst Nothing = require('./Maybe').Nothing\nconst Just = require('./Maybe').Just\n\nmodule.exports = curry((i, xs) => i >= xs.length ? Nothing() : Just(xs[i]))","const curry = require('./curry')\n\nmodule.exports = curry((key, xs) => xs.map(o => o[key]).filter(x => x != null))\n","const curry = require('./curry')\n\nmodule.exports = curry((prop, o) => o[prop])","const curry = require('./curry')\n\nmodule.exports = curry((props, o) => props.map(p => o[p]))","const curry = require('./curry')\n\nmodule.exports = curry((start, end) => Array(end - start).fill(1).map((e, i) => i + start))\n","const curry = require('./curry')\n\nmodule.exports = curry((f, init, xs) => xs.reduce(f, init))\n","const curry = require('./curry')\n\nmodule.exports = curry((f, init, xs) => xs.reduceRight(f, init))\n","const curry = require('./curry')\n\nmodule.exports = curry((regex, replacement, str) => str.replace(regex, replacement))\n","const curry = require('./curry')\n\nmodule.exports = curry((start, end, xs) => xs.slice(start, end))\n","const curry = require('./curry')\n\nmodule.exports = curry((pred, xs) => xs.some(pred))\n","const curry = require('./curry')\n\nmodule.exports = curry((f, xs) => [].concat(xs).sort(f))","const curry = require('./curry')\n\nmodule.exports = curry((regex, str) => str.split(regex))\n","const curry = require('./curry')\n\nmodule.exports = curry((i, list) => list.slice(0, i))\n","const curry = require('./curry')\n\nmodule.exports = curry((regex, string) => string.search(regex) !== -1)","const Nothing = require('./Maybe').Nothing\nconst Just = require('./Maybe').Just\n\nmodule.exports = x => x == null ? Nothing() : Just(x)","const curry = require('./curry')\nconst Nothing = require('./Maybe').Nothing\nconst Just = require('./Maybe').Just\n\nmodule.exports = curry((def, m) => m.isNothing ? def : m.value)","'use strict'\n\nconst append = require('./append')\nconst compose = require('./compose')\nconst concat = require('./concat')\nconst curry = require('./curry')\nconst drop = require('./drop')\nconst every = require('./every')\nconst filter = require('./filter')\nconst find = require('./find')\nconst findIndex = require('./findIndex')\nconst has = require('./has')\nconst head = require('./head')\nconst includes = require('./includes')\nconst indexOf = require('./indexOf')\nconst init = require('./init')\nconst join = require('./join')\nconst keys = require('./keys')\nconst last = require('./last')\nconst length = require('./length')\nconst map = require('./map')\nconst match = require('./match')\nconst merge = require('./merge')\nconst mergeAll = require('./mergeAll')\nconst nth = require('./nth')\nconst pluck = require('./pluck')\nconst prop = require('./prop')\nconst props = require('./props')\nconst range = require('./range')\nconst reduce = require('./reduce')\nconst reduceRight = require('./reduceRight')\nconst replace = require('./replace')\nconst reverse = require('./reverse')\nconst slice = require('./slice')\nconst some = require('./some')\nconst sort = require('./sort')\nconst sortBy = require('./sortBy')\nconst split = require('./split')\nconst sum = require('./sum')\nconst tail = require('./tail')\nconst take = require('./take')\nconst test = require('./test')\nconst toLowerCase = require('./toLowerCase')\nconst toMaybe = require('./toMaybe')\nconst fromMaybe = require('./fromMaybe')\nconst toUpperCase = require('./toUpperCase')\nconst trim = require('./trim')\nconst values = require('./values')\n\nmodule.exports = {\n  append: append,\n  concat: concat,\n  compose: compose,\n  curry: curry,\n  drop: drop,\n  every: every,\n  filter: filter,\n  find: find,\n  findIndex: findIndex,\n  fromMaybe: fromMaybe,\n  has: has,\n  head: head,\n  includes: includes,\n  indexOf: indexOf,\n  init: init,\n  join: join,\n  keys: keys,\n  last: last,\n  length: length,\n  map: map,\n  match: match,\n  merge: merge,\n  mergeAll: mergeAll,\n  nth: nth,\n  pluck: pluck,\n  prop: prop,\n  props: props,\n  range: range,\n  reduce: reduce,\n  reduceRight: reduceRight,\n  replace: replace,\n  reverse: reverse,\n  slice: slice,\n  some: some,\n  sort: sort,\n  sortBy: sortBy,\n  split: split,\n  sum: sum,\n  tail: tail,\n  take: take,\n  test: test,\n  toLowerCase: toLowerCase,\n  toMaybe: toMaybe,\n  toUpperCase: toUpperCase,\n  trim: trim,\n  values: values\n}\n","module.exports = xs => xs[0]","module.exports = xs => xs.slice(0, xs.length - 1)\n","module.exports = o => Object.keys(o)","module.exports = xs => xs[xs.length - 1]","module.exports = xs => xs.length","module.exports = xs => Object.assign.apply(null, [{}].concat(xs))","module.exports = xs => [].concat(xs).reverse()","module.exports = xs => [].concat(xs).sort()","module.exports = xs => xs.reduce((acc, n) => acc + n, 0)\n","module.exports = xs => xs.slice(1)\n","module.exports = str => str.toLowerCase();","module.exports = str => str.toUpperCase();","module.exports = str => str.trim();","module.exports = o => Object.keys(o).map((k) => o[k])"],"names":["chain","Nothing","map","ap","concat","empty","isNothing","isJust","of","Just","toString","equals","value","Array","prototype","slice","call","arguments","length","apply","every","filter","require$$0","find","findIndex","Object","hasOwnProperty","indexOf","join","match","assign","fill","reduce","reduceRight","replace","some","sort","split","search","append","compose","reverse","curry","drop","fromMaybe","has","head","includes","init","keys","last","merge","mergeAll","nth","pluck","prop","props","range","sortBy","sum","tail","take","test","toLowerCase","toMaybe","toUpperCase","trim","values"],"mappings":"+KAAA,YAAmB,CACf,MAAO,CACHA,MAAO,IAAKC,GADT,CAEHC,IAAK,IAAKD,GAFP,CAGHE,GAAI,IAAKF,GAHN,CAIHG,OAAQ,MAJL,CAKHC,MAAO,IAAMJ,GALV,CAMHK,YANG,CAOHC,SAPG,CAQHC,GAAI,KAAKC,IARN,CASHC,SAAU,IAAM,WATb,CAUHC,OAAQ,KAAK,OAAEL,SAVZ,CAYV,CAED,aAAiB,CACb,MAAO,CACHN,MAAO,KAAK,IADT,CAEHE,IAAK,KAAKO,EAAK,IAALA,CAFP,CAGHN,GAAI,KAAK,EAAED,GAAF,GAHN,CAIHE,OAAQ,KAAK,OAAEE,SAAF,CAAuBG,IAAvB,CAAiCA,EAAK,EAAEL,MAAF,CAAS,EAAEQ,KAAX,CAALH,CAJ3C,CAKHJ,MAAO,IAAMJ,GALV,CAMHK,YANG,CAOHC,SAPG,CAQHC,GAAI,KAAKC,IARN,CASHG,OATG,CAUHF,SAAU,IAAM,UAAc,GAV3B,CAWHC,OAAQ,KAAK,OAAEJ,MAAF,EAAqB,EAAEK,KAAF,IAX/B,CAaV,CC3BD,MAAiB,KAAO,UAAY,CAClC,GAAI,KAAJ,CACA,KAAM,GAAU,UAAY,CAE1B,MADA,GAAO,EAAKR,MAAL,CAAYS,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAZ,CACP,CAAQ,EAAKC,MAAL,EAAe,EAAEA,MAAlB,CAA4B,EAAEC,KAAF,CAAQ,IAAR,GAA5B,GAFT,CAIA,MAAO,GAAQA,KAAR,CAAc,IAAd,CAAoBF,SAApB,EANT,GCAiB,EAAM,OAAW,EAAGb,MAAH,CAAU,GAAV,CAAjB,CDAjB,CEDA,KAAM,GAAQS,MAAMC,SAAN,CAAgBC,KAA9B,CAEA,MCDiB,EAAM,OAAa,EAAGX,MAAH,GAAnB,CDCjB,GEDiB,EAAM,OAAW,EAAGW,KAAH,GAAjB,CFCjB,GGDiB,EAAM,OAAc,EAAGK,KAAH,GAApB,CHCjB,GIDiB,EAAM,OAAc,EAAGC,MAAH,GAApB,CJCjB,GH4BiB,CACbpB,SADa,CAEbQ,MAFa,CG5BjB,CKHA,KAAM,GAAUa,EAAmBrB,OAAnC,CACM,EAAOqB,EAAmBb,IADhC,CAIA,MAAiB,EAAM,OAAc,CACjC,KAAM,GAAQ,EAAGc,IAAH,GAAd,CACA,MAAgB,KAAT,IAAgB,GAAhB,CAA4B,IACtC,CAHgB,CAAjB,CCHA,KAAMtB,GAAUqB,EAAmBrB,OAAnC,CACMQ,EAAOa,EAAmBb,IADhC,CAGA,MAAiB,EAAM,OAAc,CACjC,KAAM,GAAQ,EAAGe,SAAH,GAAd,CACA,MAAiB,CAAC,CAAX,KAAevB,GAAf,CAA2BQ,IACrC,CAHgB,CAAjB,GCFiB,EAAM,OAAagB,OAAOX,SAAP,CAAiBY,cAAjB,CAAgCV,IAAhC,KAAnB,CDEjB,GEFiB,EAAM,OAA6B,CAAC,CAAnB,KAAGW,OAAH,GAAjB,CFEjB,CGHA,KAAM1B,GAAUqB,EAAmBrB,OAAnC,CACMQ,EAAOa,EAAmBb,IADhC,CAGA,MAAiB,EAAM,OAAW,CAC9B,KAAM,GAAQ,EAAGkB,OAAH,GAAd,CACA,MAAiB,CAAC,CAAX,KAAe1B,GAAf,CAA2BQ,IACrC,CAHgB,CAAjB,GCFiB,EAAM,OAAmB,EAAGmB,IAAH,GAAzB,CDEjB,GEFiB,EAAM,OAAW,EAAG1B,GAAH,CAAO,KAAK,IAAZ,CAAjB,CFEjB,GGFiB,EAAM,OAAgB,EAAI2B,KAAJ,GAAtB,CHEjB,GIFiB,EAAM,OAAWJ,OAAOK,MAAP,QAAjB,CJEjB,CKHA,KAAM7B,GAAUqB,EAAmBrB,OAAnC,CACMQ,EAAOa,EAAmBb,IADhC,CAGA,MAAiB,EAAM,OAAW,GAAK,EAAGS,MAAR,CAAiBjB,GAAjB,CAA6BQ,EAAK,IAALA,CAA9C,CAAjB,GCFiB,EAAM,OAAa,EAAGP,GAAH,CAAO,KAAK,IAAZ,EAAoBmB,MAApB,CAA2B,KAAU,IAAL,GAAhC,CAAnB,CDEjB,GEFiB,EAAM,OAAa,IAAnB,CFEjB,GGFiB,EAAM,OAAc,EAAMnB,GAAN,CAAU,KAAK,IAAf,CAApB,CHEjB,GIFiB,EAAM,OAAgBW,MAAM,GAAN,EAAmBkB,IAAnB,CAAwB,CAAxB,EAA2B7B,GAA3B,CAA+B,OAAU,GAAzC,CAAtB,CJEjB,GKFiB,EAAM,SAAiB,EAAG8B,MAAH,KAAvB,CLEjB,GMFiB,EAAM,SAAiB,EAAGC,WAAH,KAAvB,CNEjB,GOFiB,EAAM,SAA6B,EAAIC,OAAJ,KAAnC,CPEjB,GQFiB,EAAM,SAAoB,EAAGnB,KAAH,KAA1B,CREjB,GSFiB,EAAM,OAAc,EAAGoB,IAAH,GAApB,CTEjB,GUFiB,EAAM,OAAW,GAAG/B,MAAH,IAAcgC,IAAd,GAAjB,CVEjB,GWFiB,EAAM,OAAgB,EAAIC,KAAJ,GAAtB,CXEjB,GYFiB,EAAM,OAAa,EAAKtB,KAAL,CAAW,CAAX,GAAnB,CZEjB,GaFiB,EAAM,OAA4C,CAAC,CAA1B,KAAOuB,MAAP,GAAzB,CbEjB,CcJA,KAAMrC,GAAUqB,EAAmBrB,OAAnC,CACMQ,EAAOa,EAAmBb,IADhC,CAGA,MCCiB,EAAM,OAAY,EAAEH,SAAF,GAAoB,EAAEM,KAAxC,CDDjB,OE8CiB,CACf2B,QADe,CAEfnC,QAFe,CAGfoC,Q9BjDe,UAAY,CAC3B,KAAM,GAAK,EAAMxB,IAAN,CAAWC,SAAX,EAAsBwB,OAAtB,EAAX,CACA,MAAO,WAAY,CACjB,KAAM,GAAO,EAAMzB,IAAN,CAAWC,SAAX,CAAb,CACA,MAAO,GAAGF,KAAH,CAAS,CAAT,EACJiB,MADI,CACG,OAAY,IADf,CACuB,EAAG,CAAH,EAAMb,KAAN,CAAY,IAAZ,GADvB,CAER,E8BwCc,CAIfuB,OAJe,CAKfC,MALe,CAMfvB,OANe,CAOfC,QAPe,CAQfE,MARe,CASfC,WATe,CAUfoB,WAVe,CAWfC,KAXe,CAYfC,KC7De,KAAM,EAAG,CAAH,CDiDN,CAafC,UAbe,CAcfpB,SAde,CAefqB,KEhEe,KAAM,EAAGjC,KAAH,CAAS,CAAT,CAAY,EAAGG,MAAH,CAAY,CAAxB,CFiDN,CAgBfU,MAhBe,CAiBfqB,KGlEe,KAAKxB,OAAOwB,IAAP,GHiDL,CAkBfC,KInEe,KAAM,EAAG,EAAGhC,MAAH,CAAY,CAAf,CJiDN,CAmBfA,OKpEe,KAAM,EAAGA,MLiDT,CAoBfhB,KApBe,CAqBf2B,OArBe,CAsBfsB,OAtBe,CAuBfC,SMxEe,KAAM3B,OAAOK,MAAP,CAAcX,KAAd,CAAoB,IAApB,CAA0B,KAAKf,MAAL,GAA1B,CNiDN,CAwBfiD,KAxBe,CAyBfC,OAzBe,CA0BfC,MA1Be,CA2BfC,OA3Be,CA4BfC,OA5Be,CA6BfzB,QA7Be,CA8BfC,aA9Be,CA+BfC,SA/Be,CAgCfO,QOjFe,KAAM,GAAGrC,MAAH,IAAcqC,OAAd,EPiDN,CAiCf1B,OAjCe,CAkCfoB,MAlCe,CAmCfC,KQpFe,KAAM,GAAGhC,MAAH,IAAcgC,IAAd,ERiDN,CAoCfsB,QApCe,CAqCfrB,OArCe,CAsCfsB,ISvFe,KAAM,EAAG3B,MAAH,CAAU,OAAY,GAAtB,CAA+B,CAA/B,CTiDN,CAuCf4B,KUxFe,KAAM,EAAG7C,KAAH,CAAS,CAAT,CViDN,CAwCf8C,MAxCe,CAyCfC,MAzCe,CA0CfC,YW3Fe,KAAO,EAAIA,WAAJ,EXiDP,CA2CfC,QFzFe,KAAU,IAAL,IAAY/D,GAAZ,CAAwBQ,IE8C7B,CA4CfwD,YY7Fe,KAAO,EAAIA,WAAJ,EZiDP,CA6CfC,Ka9Fe,KAAO,EAAIA,IAAJ,EbiDP,CA8CfC,Oc/Fe,KAAK1C,OAAOwB,IAAP,IAAe/C,GAAf,CAAmB,KAAO,IAA1B,CdiDL"}